{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/streaming-media/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiFpC,kCAAiB;;;;IACnD;;;;OAIG;;;;;;IAEH,kCAAS;;;;;cAAC,QAAgB,EAAE,OAA+B,KAAU;IAErE;;;;OAIG;;;;;;IAEH,kCAAS;;;;;cAAC,QAAgB,EAAE,OAA+B,KAAU;IAErE;;OAEG;;;;IAEH,kCAAS;;;mBAAW;IAEpB;;OAEG;;;;IAEH,mCAAU;;;mBAAW;IAErB;;OAEG;;;;IAEH,oCAAW;;;mBAAW;;gBAlCvB,UAAU;;;QAOR,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;mDAC6C;;QAOpE,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;mDAC6C;;QAKpE,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;mDACJ;;QAKnB,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;;;;oDACvB;;QAKpB,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;;;;qDACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;IAjCX,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,gCAAgC;YACxC,SAAS,EAAE,wBAAwB;YACnC,IAAI,EAAE,8DAA8D;YACpE,SAAS,EAAE,CAAC,gBAAgB,EAAE,SAAS,EAAE,KAAK,CAAC;SAChD,CAAC;OAEW,cAAc,EAkC1B;yBApHD;EAkFoC,iBAAiB;SAAxC,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * Object of options to pass into the playVideo method.\n */\nexport interface StreamingVideoOptions {\n  /** Executes after success playing audio. */\n  successCallback?: Function;\n  /** Executes after error playing video. */\n  errorCallback?: Function;\n  /** Force one orientation for playing video. */\n  orientation?: string;\n  /** Should the video close after it's over. Defaults to true. */\n  shouldAutoClose?: boolean;\n  /** Should the video have controls. Defaults to true. Android only. */\n  controls?: boolean;\n}\n\n/**\n * Object of options to pass into the playAudio method.\n */\nexport interface StreamingAudioOptions {\n  /** Background color for audio player. */\n  bgColor?: string;\n  /** Background image for audio player. */\n  bgImage?: string;\n  /**\n   * Background image scale for audio player.\n   * Valid values are:\n   * fit\n   * stretch\n   * aspectStretch.\n   */\n  bgImageScale?: string;\n  /** Start audio player in full screen. iOS only. */\n  initFullscreen?: boolean;\n  /**\n   * Keeps the screen lit and stops it from locking\n   * while audio is playing. Android only.\n   */\n  keepAwake?: boolean;\n  /** Executes after success playing audio. */\n  successCallback?: Function;\n  /** Executes after error playing audio. */\n  errorCallback?: Function;\n}\n\n/**\n * @name Streaming Media\n * @description\n * This plugin allows you to stream audio and video in a fullscreen, native player on iOS and Android.\n *\n * @usage\n * ```typescript\n * import { StreamingMedia, StreamingVideoOptions } from '@ionic-native/streaming-media';\n *\n * constructor(private streamingMedia: StreamingMedia) { }\n *\n * let options: StreamingVideoOptions = {\n *   successCallback: () => { console.log('Video played') },\n *   errorCallback: (e) => { console.log('Error streaming') },\n *   orientation: 'landscape',\n *   shouldAutoClose: true,\n *   controls: false\n * };\n *\n * this.streamingMedia.playVideo('https://path/to/video/stream', options);\n *\n * ```\n * @interfaces\n * StreamingVideoOptions\n * StreamingAudioOptions\n */\n@Plugin({\n  pluginName: 'StreamingMedia',\n  plugin: 'cordova-plugin-streaming-media',\n  pluginRef: 'plugins.streamingMedia',\n  repo: 'https://github.com/nchutchind/cordova-plugin-streaming-media',\n  platforms: ['Amazon Fire OS', 'Android', 'iOS']\n})\n@Injectable()\nexport class StreamingMedia extends IonicNativePlugin {\n  /**\n   * Streams a video\n   * @param videoUrl {string} The URL of the video\n   * @param options {StreamingVideoOptions} Options\n   */\n  @Cordova({ sync: true })\n  playVideo(videoUrl: string, options?: StreamingVideoOptions): void {}\n\n  /**\n   * Streams an audio\n   * @param audioUrl {string} The URL of the audio stream\n   * @param options {StreamingAudioOptions} Options\n   */\n  @Cordova({ sync: true })\n  playAudio(audioUrl: string, options?: StreamingAudioOptions): void {}\n\n  /**\n   * Stops streaming audio\n   */\n  @Cordova({ sync: true })\n  stopAudio(): void {}\n\n  /**\n   * Pauses streaming audio\n   */\n  @Cordova({ sync: true, platforms: ['iOS'] })\n  pauseAudio(): void {}\n\n  /**\n   * Resumes streaming audio\n   */\n  @Cordova({ sync: true, platforms: ['iOS'] })\n  resumeAudio(): void {}\n}\n"]}